


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             interrupts, CODE, READWRITE
    2 00000000         
    3 00000000                 EXPORT           lab6
    4 00000000         
    5 00000000                 EXPORT           FIQ_Handler
    6 00000000         
    7 00000000                 EXTERN           uart_init
    8 00000000                 EXTERN           pin_connect_block_setup_for_uar
t0
    9 00000000                 EXTERN           setup_pins
   10 00000000                 EXTERN           validate_input
   11 00000000                 EXTERN           change_display
   12 00000000                 EXTERN           clear_display
   13 00000000                 EXTERN           toggle_seven_seg
   14 00000000                 EXTERN           read_character
   15 00000000                 EXTERN           output_character
   16 00000000                 EXTERN           output_string
   17 00000000                 EXTERN           new_line
   18 00000000         
   19 00000000                 EXTERN           change_display_digit
   20 00000000                 EXTERN           get_digit
   21 00000000         
   22 00000000                 EXTERN           from_ascii
   23 00000000         
   24 00000000                 EXTERN           store_input
   25 00000000                 EXTERN           get_input
   26 00000000                 EXTERN           clear_input
   27 00000000         
   28 00000000 50 72 65 
              73 73 20 
              6D 6F 6D 
              65 6E 74 
              61 72 79 
              20 70 75 
              73 68 20 
              62 75 74 
              74 6F 6E 
              20 74 6F 
              20 74 6F 
              67 67 6C 
              65 20 73 
              65 76 65 
              6E 20 73 
              65 67 6D 
              65 6E 74 
              20 64 69 
              73 70 6C 
              61 79 20 
              6F 6E 20 
              6F 72 20 
              6F 66 66 
              2E 20 45 
              6E 74 65 
              72 20 66 
              6F 75 72 
              20 68 65 
              78 61 64 
              65 63 69 
              6D 61 6C 



ARM Macro Assembler    Page 2 


              20 6E 75 
              6D 62 65 
              72 73 2C 
              20 66 6F 
              6C 6C 6F 
              77 65 64 
              20 62 79 
              20 5B 45 
              6E 74 65 
              72 5D 2C 
              20 74 6F 
              20 63 68 
              61 6E 67 
              65 20 74 
              68 65 20 
              64 69 73 
              70 6C 61 
              79 20 28 
              69 66 20 
              69 74 20 
              69 73 20 
              6F 6E 29 
              2E 20 50 
              72 65 73 
              73 20 27 
              71 27 20 
              74 6F 20 
              65 78 69 
              74 20 70 
              72 6F 67 
              72 61 6D 
              2E 00    prompt  =                "Press momentary push button to
 toggle seven segment display on or off. Enter four hexadecimal numbers, follow
ed by [Enter], to change the display (if it is on). Press 'q' to exit program."
,0
   29 000000BC 43 68 61 
              72 20 31 
              20 69 73 
              3A 20 00 char1   =                "Char 1 is: ",0
   30 000000C8 43 68 61 
              72 20 32 
              20 69 73 
              3A 20 00 char2   =                "Char 2 is: ",0
   31 000000D4 43 68 61 
              72 20 33 
              20 69 73 
              3A 20 00 char3   =                "Char 3 is: ",0
   32 000000E0 43 68 61 
              72 20 34 
              20 69 73 
              3A 20 00 char4   =                "Char 4 is: ",0
   33 000000EC 44 69 73 
              70 6C 61 
              79 69 6E 
              67 3A 20 
              00       displaying
                               =                "Displaying: ",0
   34 000000F9 00 00 00        ALIGN
   35 000000FC         



ARM Macro Assembler    Page 3 


   36 000000FC         lab6
   37 000000FC         
   38 000000FC E92D4000        STMFD            sp!, {lr}
   39 00000100         
   40 00000100 EBFFFFFE        BL               uart_init   ;setup the uart wit
                                                            h its init subrouti
                                                            ne
   41 00000104 EBFFFFFE        BL               pin_connect_block_setup_for_uar
t0 
                                                            ;setup the pin conn
                                                            ect block
   42 00000108 EBFFFFFE        BL               setup_pins  ;setup pins require
                                                            d for momentary pus
                                                            h button and seven 
                                                            segment display 
   43 0000010C EB000009        BL               interrupt_init
   44 00000110 EBFFFFFE        BL               clear_display
   45 00000114         
   46 00000114 E3A09000        MOV              r9, #0
   47 00000118         
   48 00000118 E3A08002        MOV              r8, #2
   49 0000011C         
   50 0000011C E59F4278        LDR              r4, =prompt
   51 00000120         
   52 00000120 EBFFFFFE        BL               output_string
   53 00000124         
   54 00000124         lab6_loop
   55 00000124         
   56 00000124 E3570005        CMP              r7, #5
   57 00000128 AA000000        BGE              lab6_end
   58 0000012C         
   59 0000012C EAFFFFFC        B                lab6_loop
   60 00000130         
   61 00000130         lab6_end
   62 00000130         
   63 00000130 E8BD4000        LDMFD            sp!,{lr}
   64 00000134         
   65 00000134 E12FFF1E        BX               lr
   66 00000138         
   67 00000138         
   68 00000138         
   69 00000138         interrupt_init
   70 00000138         
   71 00000138 E92D4007        STMFD            SP!, {r0-r2, lr} 
                                                            ; Save registers 
   72 0000013C         
   73 0000013C         ; Push button setup   
   74 0000013C         
   75 0000013C E59F025C        LDR              r0, =0xE002C000
   76 00000140         
   77 00000140 E5901000        LDR              r1, [r0]
   78 00000144         
   79 00000144 E3811202        ORR              r1, r1, #0x20000000
   80 00000148         
   81 00000148 E3C11201        BIC              r1, r1, #0x10000000
   82 0000014C         
   83 0000014C E5801000        STR              r1, [r0]    ; PINSEL0 bits 29:2
                                                            8 = 10
   84 00000150         



ARM Macro Assembler    Page 4 


   85 00000150         
   86 00000150         ;key board setup
   87 00000150 E59F024C        LDR              r0, =0xE000C004
   88 00000154         
   89 00000154 E5901000        LDR              r1, [r0]
   90 00000158         
   91 00000158 E3811001        ORR              r1, r1, #0x1
   92 0000015C         
   93 0000015C E5801000        STR              r1, [r0]
   94 00000160         
   95 00000160         
   96 00000160         ; Classify sources as IRQ or FIQ
   97 00000160         
   98 00000160 E59F0240        LDR              r0, =0xFFFFF000
   99 00000164         
  100 00000164 E590100C        LDR              r1, [r0, #0xC]
  101 00000168         
  102 00000168 E59F223C        LDR              r2, =0x8050
  103 0000016C         
  104 0000016C E1811002        ORR              r1, r1, r2  ; External Interrup
                                                            t 1
  105 00000170         
  106 00000170 E580100C        STR              r1, [r0, #0xC]
  107 00000174         
  108 00000174         
  109 00000174         
  110 00000174         ; Enable Interrupts
  111 00000174         
  112 00000174 E59F022C        LDR              r0, =0xFFFFF000
  113 00000178         
  114 00000178 E5901010        LDR              r1, [r0, #0x10]
  115 0000017C         
  116 0000017C E59F2228        LDR              r2, =0x8050
  117 00000180         
  118 00000180 E1811002        ORR              r1, r1, r2  ; External Interrup
                                                            t 1
  119 00000184         
  120 00000184 E5801010        STR              r1, [r0, #0x10]
  121 00000188         
  122 00000188         
  123 00000188         
  124 00000188         ; External Interrupt 1 setup for edge sensitive
  125 00000188         
  126 00000188 E59F0220        LDR              r0, =0xE01FC148
  127 0000018C         
  128 0000018C E5901000        LDR              r1, [r0]
  129 00000190         
  130 00000190 E3811002        ORR              r1, r1, #2  ; EINT1 = Edge Sens
                                                            itive
  131 00000194         
  132 00000194 E5801000        STR              r1, [r0]
  133 00000198         
  134 00000198         ; External Timer 0 modify MR0
  135 00000198         
  136 00000198 E59F0214        LDR              r0, =0xE0004018
  137 0000019C         
  138 0000019C E59F1214        LDR              r1, =160000
  139 000001A0         
  140 000001A0 E5801000        STR              r1, [r0]



ARM Macro Assembler    Page 5 


  141 000001A4         
  142 000001A4         
  143 000001A4         ; External Timer 0 MCR
  144 000001A4         
  145 000001A4 E59F0210        LDR              r0, =0xE0004014
  146 000001A8         
  147 000001A8 E5901000        LDR              r1, [r0]
  148 000001AC         
  149 000001AC         ;ORR r1, r1, #3
  150 000001AC         ;ORR r1, r1, #8
  151 000001AC E3811003        ORR              r1, r1, #0x3
  152 000001B0 E3C11020        BIC              r1, r1, #0x20
  153 000001B4         
  154 000001B4 E5801000        STR              r1, [r0]
  155 000001B8         
  156 000001B8         ; External Timer 0 timer control register
  157 000001B8         
  158 000001B8 E59F0200        LDR              r0, =0xE0004004
  159 000001BC         
  160 000001BC E5901000        LDR              r1, [r0]
  161 000001C0         
  162 000001C0 E3811001        ORR              r1, r1, #1
  163 000001C4         
  164 000001C4 E5801000        STR              r1, [r0]
  165 000001C8         
  166 000001C8         ; Enable FIQ's, Disable IRQ's
  167 000001C8         
  168 000001C8 E10F0000        MRS              r0, CPSR
  169 000001CC         
  170 000001CC E3C00040        BIC              r0, r0, #0x40
  171 000001D0         
  172 000001D0 E3800080        ORR              r0, r0, #0x80
  173 000001D4         
  174 000001D4 E121F000        MSR              CPSR_c, r0
  175 000001D8         
  176 000001D8         
  177 000001D8         
  178 000001D8 E8BD4007        LDMFD            SP!, {r0-r2, lr} 
                                                            ; Restore registers
                                                            
  179 000001DC         
  180 000001DC E12FFF1E        BX               lr          ; Return
  181 000001E0         
  182 000001E0         FIQ_Handler
  183 000001E0         
  184 000001E0 E92D401F        STMFD            SP!, {r0, r1, r2, r3, r4, lr} 
                                                            ; Save registers
  185 000001E4         
  186 000001E4 E59F01D8        LDR              r0, =0xE0004000
  187 000001E8 E5901000        LDR              r1, [r0]
  188 000001EC E3510000        CMP              r1, #0
  189 000001F0 CA000000        BGT              TIMER0
  190 000001F4 EA000030        B                EINT1
  191 000001F8         
  192 000001F8         TIMER0
  193 000001F8         
  194 000001F8 E3811001        ORR              r1, r1, #1
  195 000001FC E5801000        STR              r1, [r0]
  196 00000200         



ARM Macro Assembler    Page 6 


  197 00000200         ;r8 contains value to display
  198 00000200         
  199 00000200 E3590001        CMP              r9, #1
  200 00000204 1A00005E        BNE              FIQ_Exit
  201 00000208         
  202 00000208 E3570000        CMP              r7, #0
  203 0000020C 0A000006        BEQ              cycle_1
  204 00000210         
  205 00000210 E3570001        CMP              r7, #1
  206 00000214 0A00000D        BEQ              cycle_2
  207 00000218         
  208 00000218 E3570002        CMP              r7, #2
  209 0000021C 0A000014        BEQ              cycle_3
  210 00000220         
  211 00000220 E3570003        CMP              r7, #3
  212 00000224 0A00001B        BEQ              cycle_4
  213 00000228         
  214 00000228 EA000055        B                FIQ_Exit
  215 0000022C         
  216 0000022C         cycle_1
  217 0000022C         
  218 0000022C         ;LDR r0, =displaying
  219 0000022C         ;BL output_string
  220 0000022C         
  221 0000022C EBFFFFFE        BL               clear_display
  222 00000230         
  223 00000230 E3A00000        MOV              r0, #0
  224 00000234 EBFFFFFE        BL               get_input
  225 00000238         
  226 00000238 EBFFFFFE        BL               from_ascii
  227 0000023C         
  228 0000023C         ;BL output_character
  229 0000023C         
  230 0000023C E1A00004        MOV              r0, r4
  231 00000240         
  232 00000240 E3A04000        MOV              r4, #0
  233 00000244         
  234 00000244 EBFFFFFE        BL               change_display_digit
  235 00000248         
  236 00000248 E2877001        ADD              r7, r7, #1
  237 0000024C         
  238 0000024C EA00004C        B                FIQ_Exit
  239 00000250         
  240 00000250         cycle_2
  241 00000250         
  242 00000250 EBFFFFFE        BL               clear_display
  243 00000254         
  244 00000254 E3A00001        MOV              r0, #1
  245 00000258 EBFFFFFE        BL               get_input
  246 0000025C         
  247 0000025C EBFFFFFE        BL               from_ascii
  248 00000260         
  249 00000260         ;BL output_character
  250 00000260         
  251 00000260 E1A00004        MOV              r0, r4
  252 00000264         
  253 00000264 E3A04001        MOV              r4, #1
  254 00000268         
  255 00000268 EBFFFFFE        BL               change_display_digit



ARM Macro Assembler    Page 7 


  256 0000026C         
  257 0000026C E2877001        ADD              r7, r7, #1
  258 00000270         
  259 00000270 EA000043        B                FIQ_Exit
  260 00000274         
  261 00000274         cycle_3
  262 00000274         
  263 00000274 EBFFFFFE        BL               clear_display
  264 00000278         
  265 00000278 E3A00002        MOV              r0, #2
  266 0000027C EBFFFFFE        BL               get_input
  267 00000280         
  268 00000280 EBFFFFFE        BL               from_ascii
  269 00000284         
  270 00000284         ;BL output_character
  271 00000284         
  272 00000284 E1A00004        MOV              r0, r4
  273 00000288         
  274 00000288 E3A04002        MOV              r4, #2
  275 0000028C         
  276 0000028C EBFFFFFE        BL               change_display_digit
  277 00000290         
  278 00000290 E2877001        ADD              r7, r7, #1
  279 00000294         
  280 00000294 EA00003A        B                FIQ_Exit
  281 00000298         
  282 00000298         cycle_4
  283 00000298         
  284 00000298 EBFFFFFE        BL               clear_display
  285 0000029C         
  286 0000029C E3A00003        MOV              r0, #3
  287 000002A0 EBFFFFFE        BL               get_input
  288 000002A4         
  289 000002A4 EBFFFFFE        BL               from_ascii
  290 000002A8         
  291 000002A8         ;BL output_character
  292 000002A8         
  293 000002A8 E1A00004        MOV              r0, r4
  294 000002AC         
  295 000002AC E3A04003        MOV              r4, #3
  296 000002B0         
  297 000002B0 EBFFFFFE        BL               change_display_digit
  298 000002B4         
  299 000002B4 E3A07000        MOV              r7, #0
  300 000002B8         
  301 000002B8 EA000031        B                FIQ_Exit
  302 000002BC         
  303 000002BC         EINT1                                ; Check for EINT1 i
                                                            nterrupt
  304 000002BC         
  305 000002BC         
  306 000002BC E59F0104        LDR              r0, =0xE01FC140
  307 000002C0         
  308 000002C0 E5901000        LDR              r1, [r0]
  309 000002C4         
  310 000002C4 E3110002        TST              r1, #2
  311 000002C8         
  312 000002C8 0A000003        BEQ              FIQ_Keys
  313 000002CC         



ARM Macro Assembler    Page 8 


  314 000002CC EBFFFFFE        BL               toggle_seven_seg
  315 000002D0         
  316 000002D0 E3811002        ORR              r1, r1, #2  ; Clear Interrupt
  317 000002D4         
  318 000002D4 E5801000        STR              r1, [r0]
  319 000002D8         
  320 000002D8 EA000029        B                FIQ_Exit
  321 000002DC         
  322 000002DC         FIQ_Keys
  323 000002DC         
  324 000002DC E59F00E8        LDR              r0, =0xE000C008
  325 000002E0         
  326 000002E0 E5901000        LDR              r1, [r0]
  327 000002E4         
  328 000002E4 E2012001        AND              r2, r1, #1
  329 000002E8         
  330 000002E8 E3520000        CMP              r2, #0
  331 000002EC         
  332 000002EC 1A000024        BNE              FIQ_Exit
  333 000002F0         
  334 000002F0 EBFFFFFE        BL               read_character
  335 000002F4 EBFFFFFE        BL               validate_input
  336 000002F8         
  337 000002F8 E3540001        CMP              r4, #1      ;is input valid?
  338 000002FC 1A000020        BNE              quit_skip   ;branch away if not
                                                            
  339 00000300         
  340 00000300 E3500071        CMP              r0, #0x71
  341 00000304 0A00001E        BEQ              quit_skip
  342 00000308         
  343 00000308 EBFFFFFE        BL               output_character
  344 0000030C         
  345 0000030C E350000D        CMP              r0, #0xD
  346 00000310 0A000001        BEQ              key_enter
  347 00000314         
  348 00000314 EBFFFFFE        BL               store_input
  349 00000318         
  350 00000318 EA000019        B                quit_skip
  351 0000031C         
  352 0000031C         key_enter
  353 0000031C         
  354 0000031C EBFFFFFE        BL               new_line
  355 00000320         
  356 00000320 E59F40A8        LDR              r4, =char1
  357 00000324 EBFFFFFE        BL               output_string
  358 00000328         
  359 00000328 E3A00000        MOV              r0, #0
  360 0000032C         
  361 0000032C EBFFFFFE        BL               get_input
  362 00000330         
  363 00000330 EBFFFFFE        BL               output_character
  364 00000334         
  365 00000334 EBFFFFFE        BL               new_line
  366 00000338         
  367 00000338 E59F4094        LDR              r4, =char2
  368 0000033C EBFFFFFE        BL               output_string
  369 00000340         
  370 00000340 E3A00001        MOV              r0, #1
  371 00000344         



ARM Macro Assembler    Page 9 


  372 00000344 EBFFFFFE        BL               get_input
  373 00000348         
  374 00000348 EBFFFFFE        BL               output_character
  375 0000034C         
  376 0000034C EBFFFFFE        BL               new_line
  377 00000350         
  378 00000350 E59F4080        LDR              r4, =char3
  379 00000354 EBFFFFFE        BL               output_string
  380 00000358         
  381 00000358 E3A00002        MOV              r0, #2
  382 0000035C         
  383 0000035C EBFFFFFE        BL               get_input
  384 00000360         
  385 00000360 EBFFFFFE        BL               output_character
  386 00000364         
  387 00000364 EBFFFFFE        BL               new_line
  388 00000368         
  389 00000368 E59F406C        LDR              r4, =char4
  390 0000036C EBFFFFFE        BL               output_string
  391 00000370         
  392 00000370 E3A00003        MOV              r0, #3
  393 00000374         
  394 00000374 EBFFFFFE        BL               get_input
  395 00000378         
  396 00000378 EBFFFFFE        BL               output_character
  397 0000037C         
  398 0000037C EBFFFFFE        BL               new_line
  399 00000380         
  400 00000380 EBFFFFFE        BL               clear_input
  401 00000384         
  402 00000384         quit_skip
  403 00000384         
  404 00000384         FIQ_Exit
  405 00000384         
  406 00000384 E59F0038        LDR              r0, =0xE0004000
  407 00000388 E5901000        LDR              r1, [r0]
  408 0000038C         
  409 0000038C E3C11001        BIC              r1, r1, #1
  410 00000390 E5801000        STR              r1, [r0]
  411 00000394         
  412 00000394 E8BD401F        LDMFD            SP!, {r0, r1, r2, r3, r4, lr}
  413 00000398         
  414 00000398 E25EF004        SUBS             pc, lr, #4
  415 0000039C         
  416 0000039C         
  417 0000039C         
  418 0000039C                 END
              00000000 
              E002C000 
              E000C004 
              FFFFF000 
              00008050 
              E01FC148 
              E0004018 
              00027100 
              E0004014 
              E0004004 
              E0004000 
              E01FC140 



ARM Macro Assembler    Page 10 


              E000C008 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab6.d -o.\objects\lab6.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 524" --list=.\listings\lab6.lst lab6.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EINT1 000002BC

Symbol: EINT1
   Definitions
      At line 303 in file lab6.s
   Uses
      At line 190 in file lab6.s
Comment: EINT1 used once
FIQ_Exit 00000384

Symbol: FIQ_Exit
   Definitions
      At line 404 in file lab6.s
   Uses
      At line 200 in file lab6.s
      At line 214 in file lab6.s
      At line 238 in file lab6.s
      At line 259 in file lab6.s
      At line 280 in file lab6.s
      At line 301 in file lab6.s
      At line 320 in file lab6.s
      At line 332 in file lab6.s

FIQ_Handler 000001E0

Symbol: FIQ_Handler
   Definitions
      At line 182 in file lab6.s
   Uses
      At line 5 in file lab6.s
Comment: FIQ_Handler used once
FIQ_Keys 000002DC

Symbol: FIQ_Keys
   Definitions
      At line 322 in file lab6.s
   Uses
      At line 312 in file lab6.s
Comment: FIQ_Keys used once
TIMER0 000001F8

Symbol: TIMER0
   Definitions
      At line 192 in file lab6.s
   Uses
      At line 189 in file lab6.s
Comment: TIMER0 used once
char1 000000BC

Symbol: char1
   Definitions
      At line 29 in file lab6.s
   Uses
      At line 356 in file lab6.s
Comment: char1 used once
char2 000000C8

Symbol: char2
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 30 in file lab6.s
   Uses
      At line 367 in file lab6.s
Comment: char2 used once
char3 000000D4

Symbol: char3
   Definitions
      At line 31 in file lab6.s
   Uses
      At line 378 in file lab6.s
Comment: char3 used once
char4 000000E0

Symbol: char4
   Definitions
      At line 32 in file lab6.s
   Uses
      At line 389 in file lab6.s
Comment: char4 used once
cycle_1 0000022C

Symbol: cycle_1
   Definitions
      At line 216 in file lab6.s
   Uses
      At line 203 in file lab6.s
Comment: cycle_1 used once
cycle_2 00000250

Symbol: cycle_2
   Definitions
      At line 240 in file lab6.s
   Uses
      At line 206 in file lab6.s
Comment: cycle_2 used once
cycle_3 00000274

Symbol: cycle_3
   Definitions
      At line 261 in file lab6.s
   Uses
      At line 209 in file lab6.s
Comment: cycle_3 used once
cycle_4 00000298

Symbol: cycle_4
   Definitions
      At line 282 in file lab6.s
   Uses
      At line 212 in file lab6.s
Comment: cycle_4 used once
displaying 000000EC

Symbol: displaying
   Definitions
      At line 33 in file lab6.s
   Uses
      None



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: displaying unused
interrupt_init 00000138

Symbol: interrupt_init
   Definitions
      At line 69 in file lab6.s
   Uses
      At line 43 in file lab6.s
Comment: interrupt_init used once
interrupts 00000000

Symbol: interrupts
   Definitions
      At line 1 in file lab6.s
   Uses
      None
Comment: interrupts unused
key_enter 0000031C

Symbol: key_enter
   Definitions
      At line 352 in file lab6.s
   Uses
      At line 346 in file lab6.s
Comment: key_enter used once
lab6 000000FC

Symbol: lab6
   Definitions
      At line 36 in file lab6.s
   Uses
      At line 3 in file lab6.s
Comment: lab6 used once
lab6_end 00000130

Symbol: lab6_end
   Definitions
      At line 61 in file lab6.s
   Uses
      At line 57 in file lab6.s
Comment: lab6_end used once
lab6_loop 00000124

Symbol: lab6_loop
   Definitions
      At line 54 in file lab6.s
   Uses
      At line 59 in file lab6.s
Comment: lab6_loop used once
prompt 00000000

Symbol: prompt
   Definitions
      At line 28 in file lab6.s
   Uses
      At line 50 in file lab6.s
Comment: prompt used once
quit_skip 00000384




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: quit_skip
   Definitions
      At line 402 in file lab6.s
   Uses
      At line 338 in file lab6.s
      At line 341 in file lab6.s
      At line 350 in file lab6.s

22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

change_display 00000000

Symbol: change_display
   Definitions
      At line 11 in file lab6.s
   Uses
      None
Comment: change_display unused
change_display_digit 00000000

Symbol: change_display_digit
   Definitions
      At line 19 in file lab6.s
   Uses
      At line 234 in file lab6.s
      At line 255 in file lab6.s
      At line 276 in file lab6.s
      At line 297 in file lab6.s

clear_display 00000000

Symbol: clear_display
   Definitions
      At line 12 in file lab6.s
   Uses
      At line 44 in file lab6.s
      At line 221 in file lab6.s
      At line 242 in file lab6.s
      At line 263 in file lab6.s
      At line 284 in file lab6.s

clear_input 00000000

Symbol: clear_input
   Definitions
      At line 26 in file lab6.s
   Uses
      At line 400 in file lab6.s
Comment: clear_input used once
from_ascii 00000000

Symbol: from_ascii
   Definitions
      At line 22 in file lab6.s
   Uses
      At line 226 in file lab6.s
      At line 247 in file lab6.s
      At line 268 in file lab6.s
      At line 289 in file lab6.s

get_digit 00000000

Symbol: get_digit
   Definitions
      At line 20 in file lab6.s
   Uses
      None
Comment: get_digit unused
get_input 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: get_input
   Definitions
      At line 25 in file lab6.s
   Uses
      At line 224 in file lab6.s
      At line 245 in file lab6.s
      At line 266 in file lab6.s
      At line 287 in file lab6.s
      At line 361 in file lab6.s
      At line 372 in file lab6.s
      At line 383 in file lab6.s
      At line 394 in file lab6.s

new_line 00000000

Symbol: new_line
   Definitions
      At line 17 in file lab6.s
   Uses
      At line 354 in file lab6.s
      At line 365 in file lab6.s
      At line 376 in file lab6.s
      At line 387 in file lab6.s
      At line 398 in file lab6.s

output_character 00000000

Symbol: output_character
   Definitions
      At line 15 in file lab6.s
   Uses
      At line 343 in file lab6.s
      At line 363 in file lab6.s
      At line 374 in file lab6.s
      At line 385 in file lab6.s
      At line 396 in file lab6.s

output_string 00000000

Symbol: output_string
   Definitions
      At line 16 in file lab6.s
   Uses
      At line 52 in file lab6.s
      At line 357 in file lab6.s
      At line 368 in file lab6.s
      At line 379 in file lab6.s
      At line 390 in file lab6.s

pin_connect_block_setup_for_uart0 00000000

Symbol: pin_connect_block_setup_for_uart0
   Definitions
      At line 8 in file lab6.s
   Uses
      At line 41 in file lab6.s
Comment: pin_connect_block_setup_for_uart0 used once
read_character 00000000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols


Symbol: read_character
   Definitions
      At line 14 in file lab6.s
   Uses
      At line 334 in file lab6.s
Comment: read_character used once
setup_pins 00000000

Symbol: setup_pins
   Definitions
      At line 9 in file lab6.s
   Uses
      At line 42 in file lab6.s
Comment: setup_pins used once
store_input 00000000

Symbol: store_input
   Definitions
      At line 24 in file lab6.s
   Uses
      At line 348 in file lab6.s
Comment: store_input used once
toggle_seven_seg 00000000

Symbol: toggle_seven_seg
   Definitions
      At line 13 in file lab6.s
   Uses
      At line 314 in file lab6.s
Comment: toggle_seven_seg used once
uart_init 00000000

Symbol: uart_init
   Definitions
      At line 7 in file lab6.s
   Uses
      At line 40 in file lab6.s
Comment: uart_init used once
validate_input 00000000

Symbol: validate_input
   Definitions
      At line 10 in file lab6.s
   Uses
      At line 335 in file lab6.s
Comment: validate_input used once
17 symbols
373 symbols in table
